.full {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  margin: 0;
  position: relative;
  overflow: hidden;
}

.main {
  background: white;
  padding: 2rem;
  border-radius: 8px;
  box-shadow: 0 0 10px 5px var(--shadow-but);
  text-align: center;
  max-width: 300px;
  width: 100%;
  margin-top: 2rem; /* Space between header and login box */
  margin-bottom: 2rem; /* Space below the login box */
}

.user,
.input {
  margin-bottom: 1rem;
  display: flex;
  justify-content: center;
  width: 100%;
}

.input {
  display: flex;
  flex-direction: column; /* Ensure inputs are stacked vertically */
  align-items: center; /* Center input elements horizontally */
}

.input input {
  width: 100%; /* Ensure inputs take full width */
  max-width: 280px; /* Limit max width for better appearance */
  padding: 0.5rem;
  font-size: 1rem;
  border: 1px solid var(--header);
  border-radius: 5px;
  background-color: var(--shadow-but);
  color: black;
  text-align: center;
}

.input input:last-of-type {
  margin-bottom: 0; /* Remove margin for the last input */
}

.input input:not(:last-of-type) {
  margin-bottom: 1rem; /* Space between inputs */
}

.user select,
.input input {
  width: 100%;
  max-width: 280px; /* Limit max width for better appearance */
  padding: 0.5rem;
  font-size: 1rem;
  border: 1px solid var(--header);
  border-radius: 5px;
  background-color: var(--shadow-but);
  color: black;
  text-align: center;
}

.user select:focus,
.input input:focus {
  border-color: var(--header);
  background-color: white;
  outline: none;
}

.input input::placeholder {
  color: transparent; /* Hide placeholder text when input is focused */
}

.input input:not(:focus)::placeholder {
  color: black; /* Show placeholder text when input is not focused */
}

.forgot {
  margin-top: 1rem;
  margin-bottom: 20px;
  color: #0A21C0;
  text-decoration: none;
}

.forgot:hover{
  text-decoration: underline;
  cursor: pointer;
  color: #050A44;
}

.res1 {
  display: flex;
  flex-direction: column; /* Stack the elements vertically */
}

.res {
  border: none;
  font-size: 16px;
  background-color: white; /* Ensure the background is transparent */
  color: #0A21C0; /* Text color */
  text-decoration: none; /* No underline by default */
  margin-bottom: 10px; /* Space between .res and .but-can */
}

.res:hover {
  text-decoration: underline; /* Underline on hover */
  color: #050A44; /* Darker color on hover */
  cursor: pointer;
}

.but-can {
  background-color: var(--rest-but); 
  color: white; 
  border: none; 
  padding: 0.5rem 1rem; 
  cursor: pointer; 
  border-radius: 4px; 
  margin: 10px auto;
  font-size: 14px;
  width: 50%; 
}

.but-can:hover {
  background-color: var(--hov-but); /* Background color on hover */
  color: black; /* Text color on hover */
  border: 1.5px solid transparent; 
  border-color: var(--rest-but); /* Change border color on hover */
}



.but {
  background-color: var(--rest-but);
  color: white;
  border: none;
  padding: 0.5rem 1rem;
  cursor: pointer;
  border-radius: 4px;
  font-size: 16px;
  width: 50%;
  margin: 0 auto; /* Center the button */
}

.but:hover {
  background-color: var(--hov-but); /* Hover background color */
  color: black; /* Hover text color */
  font-weight: 600; /* Set weight to avoid size changes */
  border: 1.5px solid transparent; 
  border-color: var(--rest-but); /* Change border color without changing width */
}

.error-popup {
  background-color: red; /* Red background for error */
  color: white;
  padding: 10px;
  border-radius: 5px;
  margin-top: 10px;
  text-align: center;
}
